


# Serving docs from another domain
server {
    index index.html README.html;
    listen 80;
    listen 443 ssl;
    server_name dev.{{ rtd_domain }};
    access_log {{ nginx_logs }}/readthedocs-dev.log host;
    root {{ rtd_root }}/public_web_root/front/it/latest/;

    # FIXME
    # ssl_certificate /etc/letsencrypt/live/dev.{{ rtd_domain }}/fullchain.pem; # managed by Certbot
    # ssl_certificate_key /etc/letsencrypt/live/dev.{{ rtd_domain }}/privkey.pem; # managed by Certbot

    # Redirect front page to locale
    # TODO perhaps rely on accept header here for language instead
    location = / {
        add_header X-Redirct-From Nginx;
        add_header X-Deity docs;
        rewrite ^ {{ rtd_proto }}://dev.{{ rtd_domain }}/it/;
    }
    location ~ ^/(?P<lang>it|en)/(?P<path>.*)$ {
       alias {{ rtd_root }}/public_web_root/front/$lang/latest/$path;
    }

    location /favicon.ico {
        root {{ rtd_root }}/media/images;
        break;
   }

    location /robots.txt {
        root {{ rtd_root }}/media/;
        break;
   }

    location ^~ /media/ {
        expires 7d;
        alias {{ rtd_root }}/media/;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header X-Deity docs;
    }

    location ^~ /static/ {
        expires 7d;
        alias {{ rtd_root }}/media/;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header X-Deity docs;
    }

    # Subproject redirection and serving
    location ~* ^/(?P<project>[^/]+)/projects/(?P<subproject>[^/]+)/ {
        location ~* ^/(?P<project>[^/]+)/projects/(?P<subproject>[^/]+)/$ {
            add_header X-Redirct-From Nginx;
            add_header X-Deity docs;
            rewrite ^ https://dev.{{ rtd_domain }}/$project/projects/$subproject/it/latest/;
        }

        location ~* ^/(?P<project>[^/]+)/projects/(?P<subproject>[^/]+)/(?P<lang>\w\w)/(?P<version>[^/]+)/ {
            root {{ rtd_root }}/public_web_root/;
            try_files $uri $uri/ @fallback;
            error_page 403 404 500 = @fallback;
            add_header X-Subdomain-TryFiles True;
            add_header X-Served Nginx;
            add_header X-Deity docs;
        }

    }

    # Main project redirection and serving
    location ~* ^/(?P<project>[^/]+)/ {
        location ~* ^/(?P<project>[^/]+)/$ {
            add_header X-Redirct-From Nginx;
            add_header X-Deity docs;
            rewrite ^ https://dev.{{ rtd_domain }}/$project/it/latest/;
        }

        location ~* ^/(?P<project>[^/]+)/(?P<lang>\w\w)/(?P<version>[^/]+)/ {
            root {{ rtd_root }}/public_web_root/;
            try_files $uri $uri/ @fallback;
            error_page 403 404 500 = @fallback;
            add_header X-Subdomain-TryFiles True;
            add_header X-Served Nginx;
            add_header X-Deity docs;
        }
    }

    location @fallback {
        proxy_pass http://127.0.0.1:8001;
        proxy_buffering off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_intercept_errors on;
        add_header X-Fallback True;
        add_header X-Served Django;
        add_header X-Deity docs;
    }

    # Sendfile support for serving from Python
    location /user_builds/ {
        internal;
        root {{ rtd_root }};
        add_header X-Served Nginx-Sendfile;
        add_header X-Deity docs;
    }

    # Let's encrypt
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

}
